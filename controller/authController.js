const User=require("../dbSchemas/userSchema"),bcrypt=require("bcrypt"),passport=require("passport");class AuthController{async registerUser(r,e){try{let{username:s,email:t,password:a}=r.body,o=await User.findOne({$or:[{email:t},{username:s}]});if(o)return e.status(400).json({error:"Email or username already in use"});let i=await bcrypt.hash(a,10),n=new User({username:s,email:t,password:i});await n.save(),e.status(201).json({message:"User registered successfully"})}catch(c){console.error("Registration Error:",c),e.status(500).json({error:"An error occurred during registration"})}}loginUser(r,e){passport.authenticate("local",{successRedirect:"/admin",failureRedirect:"/login",failureFlash:!0})(r,e)}logoutUser(r,e){r.logout(),e.redirect("/login")}}module.exports=new AuthController;